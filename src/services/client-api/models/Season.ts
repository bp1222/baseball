/* tslint:disable */
/* eslint-disable */
/**
 * MLB StatAPI
 * An API for MLB Stat API 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * MLB Season
 * @export
 * @interface Season
 */
export interface Season {
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    seasonId?: string;
    /**
     * 
     * @type {boolean}
     * @memberof Season
     */
    hasWildcard?: boolean;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    preSeasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    preSeasonEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    seasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    springStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    springEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    regularSeasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    lastDate1stHalf?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    allStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    firstDate2ndHalf?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    regularSeasonEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    postSeasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    postSeasonEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    offSeasonStartDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    offSeasonEndDate?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    seasonLevelGamedayType?: string;
    /**
     * 
     * @type {string}
     * @memberof Season
     */
    gameLevelGamedayType?: string;
    /**
     * 
     * @type {number}
     * @memberof Season
     */
    qualifierPlateAppearances?: number;
    /**
     * 
     * @type {number}
     * @memberof Season
     */
    qualifierOutsPitched?: number;
}

/**
 * Check if a given object implements the Season interface.
 */
export function instanceOfSeason(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function SeasonFromJSON(json: any): Season {
    return SeasonFromJSONTyped(json, false);
}

export function SeasonFromJSONTyped(json: any, ignoreDiscriminator: boolean): Season {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'seasonId': !exists(json, 'seasonId') ? undefined : json['seasonId'],
        'hasWildcard': !exists(json, 'hasWildcard') ? undefined : json['hasWildcard'],
        'preSeasonStartDate': !exists(json, 'preSeasonStartDate') ? undefined : json['preSeasonStartDate'],
        'preSeasonEndDate': !exists(json, 'preSeasonEndDate') ? undefined : json['preSeasonEndDate'],
        'seasonStartDate': !exists(json, 'seasonStartDate') ? undefined : json['seasonStartDate'],
        'springStartDate': !exists(json, 'springStartDate') ? undefined : json['springStartDate'],
        'springEndDate': !exists(json, 'springEndDate') ? undefined : json['springEndDate'],
        'regularSeasonStartDate': !exists(json, 'regularSeasonStartDate') ? undefined : json['regularSeasonStartDate'],
        'lastDate1stHalf': !exists(json, 'lastDate1stHalf') ? undefined : json['lastDate1stHalf'],
        'allStartDate': !exists(json, 'allStartDate') ? undefined : json['allStartDate'],
        'firstDate2ndHalf': !exists(json, 'firstDate2ndHalf') ? undefined : json['firstDate2ndHalf'],
        'regularSeasonEndDate': !exists(json, 'regularSeasonEndDate') ? undefined : json['regularSeasonEndDate'],
        'postSeasonStartDate': !exists(json, 'postSeasonStartDate') ? undefined : json['postSeasonStartDate'],
        'postSeasonEndDate': !exists(json, 'postSeasonEndDate') ? undefined : json['postSeasonEndDate'],
        'offSeasonStartDate': !exists(json, 'offSeasonStartDate') ? undefined : json['offSeasonStartDate'],
        'offSeasonEndDate': !exists(json, 'offSeasonEndDate') ? undefined : json['offSeasonEndDate'],
        'seasonLevelGamedayType': !exists(json, 'seasonLevelGamedayType') ? undefined : json['seasonLevelGamedayType'],
        'gameLevelGamedayType': !exists(json, 'gameLevelGamedayType') ? undefined : json['gameLevelGamedayType'],
        'qualifierPlateAppearances': !exists(json, 'qualifierPlateAppearances') ? undefined : json['qualifierPlateAppearances'],
        'qualifierOutsPitched': !exists(json, 'qualifierOutsPitched') ? undefined : json['qualifierOutsPitched'],
    };
}

export function SeasonToJSON(value?: Season | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'seasonId': value.seasonId,
        'hasWildcard': value.hasWildcard,
        'preSeasonStartDate': value.preSeasonStartDate,
        'preSeasonEndDate': value.preSeasonEndDate,
        'seasonStartDate': value.seasonStartDate,
        'springStartDate': value.springStartDate,
        'springEndDate': value.springEndDate,
        'regularSeasonStartDate': value.regularSeasonStartDate,
        'lastDate1stHalf': value.lastDate1stHalf,
        'allStartDate': value.allStartDate,
        'firstDate2ndHalf': value.firstDate2ndHalf,
        'regularSeasonEndDate': value.regularSeasonEndDate,
        'postSeasonStartDate': value.postSeasonStartDate,
        'postSeasonEndDate': value.postSeasonEndDate,
        'offSeasonStartDate': value.offSeasonStartDate,
        'offSeasonEndDate': value.offSeasonEndDate,
        'seasonLevelGamedayType': value.seasonLevelGamedayType,
        'gameLevelGamedayType': value.gameLevelGamedayType,
        'qualifierPlateAppearances': value.qualifierPlateAppearances,
        'qualifierOutsPitched': value.qualifierOutsPitched,
    };
}

