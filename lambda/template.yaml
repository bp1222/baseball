# This is the SAM template that represents the architecture of your serverless application
# https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/serverless-sam-template-basics.html

AWSTemplateFormatVersion: 2010-09-09
Description: lambda

Transform:
  - AWS::Serverless-2016-10-31

Parameters:
  AWSREGIONNAME:
    Type: String
    Description: Default region for deployment.
    Default: us-east-2
  AWSENVNAME:
    Type: String
    Description: AWS Environment where code is being executed (AWS_SAM_LOCAL or AWS).
    Default: AWS_SAM_LOCAL
  DEVENVNAME:
    Type: String
    Description: Developer environment where code is being executed (OSX, Windows,
      or Linux).
    Default: OSX

Resources:
  LeagueStandings:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: LeagueStandings
      PrimaryKey:
        Name: id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2

  getLeagueSeasonStandings:
    Type: AWS::Serverless::Function
    Properties:
      Handler: index.handler
      Runtime: nodejs20.x
      MemorySize: 128
      Timeout: 100
      Description: A simple example includes a HTTP get method to get all items from a
        DynamoDB table.
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref LeagueStandings
      Environment:
        Variables:
          TableName: !Ref LeagueStandings
          AWSREGION: !Ref AWSREGIONNAME
          AWSENV: !Ref AWSENVNAME
          DEVENV: !Ref DEVENVNAME
      Events:
        ServerlessRestApiGETleagueseason:
          Type: Api
          Properties:
            Path: /{season}/{league}
            Method: GET
      CodeUri: ./src/getLeagueSeasonStandings

Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL for Prod stage
    Value: !Sub https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/